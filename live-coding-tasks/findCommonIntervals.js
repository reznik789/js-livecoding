/**
 * Даны два отсортированных списка интервалов присутствия пользователей в ожидании в течение дня.
 * Каждый интервал представлен в виде [начало, конец], где начало < конец.
 * Интервалы указаны в часах (от 8 до 24) и уже отсортированы по времени начала.
 * Нужно найти все интервалы, когда оба пользователя были в ожидании одновременно.
 * @param {[number,number][]} arr1
 * @param {[number,number][]} arr2
 * @returns {[number,number][]}
 */
const findCommonIntervals = (arr1, arr2) => {
  const res = [];

  let index1 = 0;
  let index2 = 0;

  while (index1 < arr1.length && index2 < arr2.length) {
    const [start1, end1] = arr1[index1];
    const [start2, end2] = arr2[index2];
    if (end1 <= start2) {
      index1++;
      continue;
    }
    if (end2 <= start1) {
      index2++;
      continue;
    }
    res.push([Math.max(start1, start2), Math.min(end1, end2)]);
    end1 < end2 ? index1++ : index2++;
  }
  return res;
};

// Тест 1: Множественные пересечения в разных частях дня
const user1 = [
  [8, 10],
  [11, 13],
  [14, 16],
  [17, 19],
  [20, 22],
];
const user2 = [
  [9, 12],
  [13, 15],
  [16, 18],
  [19, 21],
];
/* Ожидаемый результат:
   [[9, 10], [11, 12], [14, 15], [17, 18], [20, 21]]
*/
console.log(
  "Тест 1 (множественные пересечения):",
  findCommonIntervals(user1, user2)
);

// Тест 2: Длинные интервалы с несколькими пересечениями
const user3 = [
  [8, 15],
  [16, 20],
];
const user4 = [
  [9, 11],
  [12, 14],
  [17, 19],
  [21, 23],
];
/* Ожидаемый результат:
   [[9, 11], [12, 14], [17, 19]]
*/
console.log("Тест 2 (длинные интервалы):", findCommonIntervals(user3, user4));

// Тест 3: Один пользователь с очень плотным графиком
const user5 = [
  [8, 9],
  [9.5, 10.5],
  [11, 11.5],
  [12, 12.25],
  [12.5, 13],
];
const user6 = [[8.5, 12.75]];
/* Ожидаемый результат:
   [[8.5, 9], [9.5, 10.5], [11, 11.5], [12, 12.25], [12.5, 12.75]]
*/
console.log("Тест 3 (плотный график):", findCommonIntervals(user5, user6));

// Тест 4: Частичные пересечения на границах
const user7 = [
  [8, 10],
  [10, 12],
  [12, 14],
  [14, 16],
];
const user8 = [
  [9.5, 10.5],
  [11.5, 12.5],
  [13.5, 14.5],
];
/* Ожидаемый результат:
   [[9.5, 10], [10, 10.5], [11.5, 12], [12, 12.5], [13.5, 14], [14, 14.5]]
*/
console.log("Тест 4 (граничные случаи):", findCommonIntervals(user7, user8));

// Тест 5: Большое количество мелких интервалов
const user9 = [
  [8, 8.5],
  [9, 9.2],
  [9.4, 9.6],
  [9.8, 10],
  [10.2, 10.4],
];
const user10 = [
  [8.1, 9.1],
  [9.3, 9.5],
  [9.7, 9.9],
  [10.1, 10.3],
];
/* Ожидаемый результат:
   [[8.1, 8.5], [9, 9.1], [9.4, 9.5], [9.8, 9.9], [10.2, 10.3]]
*/
console.log("Тест 5 (мелкие интервалы):", findCommonIntervals(user9, user10));

// Тест 6: Один пользователь активен весь день
const user11 = [[8, 24]];
const user12 = [
  [9, 10],
  [11.5, 12.5],
  [14, 15],
  [22, 23],
];
/* Ожидаемый результат:
   [[9, 10], [11.5, 12.5], [14, 15], [22, 23]]
*/
console.log(
  "Тест 6 (один активен весь день):",
  findCommonIntervals(user11, user12)
);

// Тест 7: Совпадение всех интервалов
const user13 = [
  [8, 9],
  [10, 11],
  [12, 13],
];
const user14 = [
  [8, 9],
  [10, 11],
  [12, 13],
];
/* Ожидаемый результат:
   [[8, 9], [10, 11], [12, 13]]
*/
console.log("Тест 7 (полное совпадение):", findCommonIntervals(user13, user14));

// Тест 8: Нет пересечений
const user15 = [
  [8, 9],
  [10, 11],
];
const user16 = [
  [9.1, 9.9],
  [11.1, 12],
];
/* Ожидаемый результат:
   []
*/
console.log("Тест 8 (нет пересечений):", findCommonIntervals(user15, user16));

// Тест 10: Сложные дробные интервалы
const user17 = [
  [8.15, 9.45],
  [10.3, 11.15],
  [12.0, 12.3],
];
const user18 = [
  [8.3, 9.3],
  [10.45, 11.3],
  [12.15, 12.45],
];
/* Ожидаемый результат:
   [[8.30, 9.30], [10.45, 11.15], [12.15, 12.30]]
*/
console.log("Тест 9 (дробные интервалы):", findCommonIntervals(user17, user18));
